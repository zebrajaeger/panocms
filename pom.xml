<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>de.zebrajaeger</groupId>
    <artifactId>panocms-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Panocms</name>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Override this in sub-modules -->
        <project.parent.basedir>${basedir}/</project.parent.basedir>
        <!-- Dependency versions -->
        <version.cmsshell-maven-plugin>1.4.0</version.cmsshell-maven-plugin>
        <version.opencms-maven-plugin>2.1</version.opencms-maven-plugin>
        <version.org.opencms.opencms-core>10.5.1</version.org.opencms.opencms-core>
    </properties>

    <modules>
        <module>de.zebrajaeger.panocms</module>
    </modules>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- This will import 'org.opencms:opencms-core:pom' and we get all libs which are shipped by opencms -->
            <dependency>
                <groupId>org.opencms</groupId>
                <artifactId>opencms-core</artifactId>
                <version>${version.org.opencms.opencms-core}</version>
                <type>pom</type>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.opencms</groupId>
                <artifactId>opencms-core</artifactId>
                <version>${version.org.opencms.opencms-core}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.gwt</groupId>
                        <artifactId>gwt-dev</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-client-compiler</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.validation</groupId>
                        <artifactId>validation-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.opencms</groupId>
                <artifactId>opencms-gwt</artifactId>
                <version>${version.org.opencms.opencms-core}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>cryptix-jce</groupId>
                <artifactId>cryptix-jce-provider</artifactId>
                <version>20050328-osgi</version>
                <scope>provided</scope>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.1</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.5</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <profiles>
        <profile>
            <id>develop</id>
            <build>
                <plugins>
                    <!-- Read properties -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <version>1.0.0</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>read-project-properties</goal>
                                </goals>
                                <configuration>
                                    <files>
                                        <file>${project.parent.basedir}/src/config/default.properties</file>
                                        <file>${project.parent.basedir}/src/config/local.properties</file>
                                    </files>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>src/config/checkstyle-checker-strong.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                </plugin>

                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>2.2.1</version>
                    <executions>
                        <execution>
                            <phase>generate-resources</phase>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>false</verbose>
                        <dotGitDirectory>${project.parent.basedir}/.git</dotGitDirectory>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>de.silpion.opencms.maven.plugins</groupId>
                    <artifactId>cmsshell-maven-plugin</artifactId>
                    <version>${version.cmsshell-maven-plugin}</version>
                    <configuration>
                        <username>${opencms.admin.username}</username>
                        <password>${opencms.admin.password}</password>
                        <webInfPath>${opencms.webapp.home}/WEB-INF/</webInfPath>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.5.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <!-- Frontend Build -->
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>groovy-maven-plugin</artifactId>
                    <version>2.0</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <source>
                                    import java.nio.file.*

                                    project.properties['skip.installnodenpm'] = Files.exists(Paths.get(project.build.directory, 'node')).
                                            toString()
                                    project.properties['skip.npm'] = Files.
                                            exists(Paths.get(properties['project.build.sourceFrontend'], 'node_modules')).toString()
                                    project.properties['skip.bower'] = Files.
                                            exists(Paths.get(properties['project.build.sourceFrontend'], 'src/vendor/bower')).toString()
                                    project.properties['skip.grunt'] = Files.
                                            exists(Paths.get(properties['project.build.distFrontend'], 'assets')).toString()
                                </source>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>1.0</version>
                    <configuration>
                        <installDirectory>${project.build.directory}</installDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>install node and npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <nodeVersion>v7.10.0</nodeVersion>
                                <npmVersion>4.2.0</npmVersion>
                            </configuration>
                        </execution>
                        <execution>
                            <id>npm install grunt bower</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <arguments>install grunt grunt-cli time-grunt load-grunt-config bower</arguments>
                                <workingDirectory>${project.build.sourceFrontend}</workingDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <arguments>install</arguments>
                                <workingDirectory>${project.build.sourceFrontend}</workingDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>bower install</id>
                            <goals>
                                <goal>bower</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <arguments>install</arguments>
                                <workingDirectory>${project.build.sourceFrontend}</workingDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>grunt:build:development</id>
                            <goals>
                                <goal>gulp</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <arguments>build</arguments>
                                <workingDirectory>${project.build.sourceFrontend}</workingDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <id>grunt:build:production</id>
                            <goals>
                                <goal>gulp</goal>
                            </goals>
                            <phase>none</phase>
                            <configuration>
                                <arguments>build --env production</arguments>
                                <workingDirectory>${project.build.sourceFrontend}</workingDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.0.2</version>
                    <executions>
                        <execution>
                            <id>copy frontend to target 1</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/frontend</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${project.build.sourceFrontend}/.tmp</directory>
                                        <excludes>
                                            <exclude>**/*.map</exclude>
                                        </excludes>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy frontend to target 2</id>
                            <phase>none</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/frontend</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${project.build.sourceFrontend}/.tmp</directory>
                                        <excludes>
                                            <exclude>**/*.map</exclude>
                                        </excludes>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>silpion-artifactory-releases</id>
            <name>Silpion Artifactory: Release Repository</name>
            <url>https://artifactory.office.silpion.de/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
            <id>silpion-artifactory-snapshots</id>
            <name>Silpion Artifactory: Snapshot Repository</name>
            <url>https://artifactory.office.silpion.de/artifactory/libs-snapshot-local</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

</project>
