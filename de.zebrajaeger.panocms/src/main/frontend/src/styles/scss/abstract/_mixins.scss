@mixin breakpoint-value($property, $value-list) {
  @each $breakpoint, $value in $value-list {
    @include breakpoint(get-breakpoint($breakpoint)) {
      #{$property}: $value;
    }
  }
}

@mixin make-container($breakpoints: $breakpoints) {
  @extend %clearfix;
  margin-left: auto;
  margin-right: auto;

  @each $breakpoint, $values in $breakpoints {
    @include breakpoint(get-breakpoint($breakpoint)) {
      @if map-has-key($values, 'frame') {
        $frame: map-get($values, 'frame');
        padding-left: ($frame / 2);
        padding-right: ($frame / 2);
      }
    }
  }
}

@mixin make-container-max-widths($breakpoints: $breakpoints) {
  @each $breakpoint, $values in $breakpoints {
    @include breakpoint(get-breakpoint($breakpoint)) {
      max-width: 100%;
      @if (map-has-key($values, 'width')) {
        width: map-get($values, 'width');
      } @else {
        width: 100%;
      }
    }
  }
}

@mixin make-row($breakpoints: $breakpoints) {
  @extend %clearfix;

  @each $breakpoint, $values in $breakpoints {
    @include breakpoint(get-breakpoint($breakpoint)) {
      $gutter: map-get($values, 'gutter');
      margin-left: ($gutter / -2);
      margin-right: ($gutter / -2);
    }
  }
}

@mixin make-col-ready($breakpoints: $breakpoints) {
  float: left;
  min-height: 1px;

  @each $breakpoint, $values in $breakpoints {
    @include breakpoint(get-breakpoint($breakpoint)) {
      $gutter: map-get($values, 'gutter');
      padding-left: ($gutter / 2);
      padding-right: ($gutter / 2);
    }
  }
}

@mixin make-col($size, $columns: $grid-columns) {
  width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  margin-left: percentage($size / $columns);
}

@mixin make-col-push($size, $columns: $grid-columns) {
  left: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-pull($size, $columns: $grid-columns) {
  right: if($size > 0, percentage($size / $columns), auto);
}

@mixin make-col-modifier($type, $size, $columns: $grid-columns) {
  @if $type == push {
    @include make-col-push($size, $columns);
  } @else if $type == pull {
    @include make-col-pull($size, $columns);
  } @else if $type == offset {
    @include make-col-offset($size, $columns);
  }
}
